#include "CBaseEntity.h"

#include "../../SDK.h"

int CBaseEntity::GetIntermediateDataSize()
{
	return std::max(GetPredDescMap()->packed_size, 4);
}

Vec3 CBaseEntity::GetSize()
{
	return m_vecMaxs() - m_vecMins();
}

Vec3 CBaseEntity::GetOffset()
{
	return m_vecMins() + m_vecMaxs();
}

Vec3 CBaseEntity::GetCenter()
{
	return m_vecOrigin() + GetOffset() / 2;
}

Vec3 CBaseEntity::GetRenderCenter()
{
	Vec3 vMins, vMaxs; GetRenderBounds(vMins, vMaxs);
	return GetRenderOrigin() + (vMaxs - vMins) / 2;
}

int CBaseEntity::IsInValidTeam()
{
	switch (int nTeamNum = m_iTeamNum())
	{
	case TF_TEAM_RED:
	case TF_TEAM_BLUE:
		return nTeamNum;
	}
	return 0;
}

int CBaseEntity::SolidMask()
{
	if (IsPlayer())
	{
		switch (m_iTeamNum())
		{
		case TF_TEAM_RED: return MASK_PLAYERSOLID | CONTENTS_BLUETEAM;
		case TF_TEAM_BLUE: return MASK_PLAYERSOLID | CONTENTS_REDTEAM;
		}
		return MASK_PLAYERSOLID;
	}
	return MASK_SOLID;
}

#pragma region Model hitboxes
// stupid, we shouldn't need to do this

int CBaseEntity::GetHitboxToBase(int nHitbox)
{
	switch (H::Entities.GetModel(entindex()))
	{
	case FNV1A::Hash32Const("models/vsh/player/saxton_hale.mdl"):
	case FNV1A::Hash32Const("models/vsh/player/hell_hale.mdl"):
	case FNV1A::Hash32Const("models/vsh/player/santa_hale.mdl"):
		switch (nHitbox)
		{
		case HITBOX_SAXTON_HEAD: return HITBOX_HEAD;
		case HITBOX_SAXTON_SPINE0: return HITBOX_SPINE0;
		case HITBOX_SAXTON_SPINE1: return HITBOX_SPINE1;
		case HITBOX_SAXTON_SPINE2: return HITBOX_SPINE2;
		case HITBOX_SAXTON_SPINE3: return HITBOX_SPINE3;
		case HITBOX_SAXTON_NECK:
		case HITBOX_SAXTON_PELVIS: return HITBOX_PELVIS;
		case HITBOX_SAXTON_LEFT_UPPERARM: return HITBOX_LEFT_UPPERARM;
		case HITBOX_SAXTON_LEFT_FOREARM: return HITBOX_LEFT_FOREARM;
		case HITBOX_SAXTON_LEFT_HAND: return HITBOX_LEFT_HAND;
		case HITBOX_SAXTON_RIGHT_UPPERARM: return HITBOX_RIGHT_UPPERARM;
		case HITBOX_SAXTON_RIGHT_FOREARM: return HITBOX_RIGHT_FOREARM;
		case HITBOX_SAXTON_RIGHT_HAND: return HITBOX_RIGHT_HAND;
		case HITBOX_SAXTON_LEFT_THIGH: return HITBOX_LEFT_THIGH;
		case HITBOX_SAXTON_LEFT_CALF: return HITBOX_LEFT_CALF;
		case HITBOX_SAXTON_LEFT_FOOT: return HITBOX_LEFT_FOOT;
		case HITBOX_SAXTON_RIGHT_THIGH: return HITBOX_RIGHT_THIGH;
		case HITBOX_SAXTON_RIGHT_CALF: return HITBOX_RIGHT_CALF;
		case HITBOX_SAXTON_RIGHT_FOOT: return HITBOX_RIGHT_FOOT;
		}
		break;
	case FNV1A::Hash32Const("models/player/scout_infected.mdl"):
	case FNV1A::Hash32Const("models/player/soldier_infected.mdl"):
	case FNV1A::Hash32Const("models/player/sniper_infected.mdl"):
		switch (nHitbox)
		{
		case HITBOX_ZOMBIE128_HEAD: return HITBOX_HEAD;
		case HITBOX_ZOMBIE128_SPINE0: return HITBOX_SPINE0;
		case HITBOX_ZOMBIE128_SPINE1: return HITBOX_SPINE1;
		case HITBOX_ZOMBIE128_SPINE2: return HITBOX_SPINE2;
		case HITBOX_ZOMBIE128_SPINE3: return HITBOX_SPINE3;
		case HITBOX_ZOMBIE128_NECK:
		case HITBOX_ZOMBIE128_PELVIS: return HITBOX_PELVIS;
		case HITBOX_ZOMBIE128_LEFT_COLLAR:
		case HITBOX_ZOMBIE128_LEFT_UPPERARM: return HITBOX_LEFT_UPPERARM;
		case HITBOX_ZOMBIE128_LEFT_FOREARM: return HITBOX_LEFT_FOREARM;
		case HITBOX_ZOMBIE128_LEFT_HAND: return HITBOX_LEFT_HAND;
		case HITBOX_ZOMBIE128_RIGHT_COLLAR:
		case HITBOX_ZOMBIE128_RIGHT_UPPERARM: return HITBOX_RIGHT_UPPERARM;
		case HITBOX_ZOMBIE128_RIGHT_FOREARM: return HITBOX_RIGHT_FOREARM;
		case HITBOX_ZOMBIE128_RIGHT_HAND: return HITBOX_RIGHT_HAND;
		case HITBOX_ZOMBIE128_LEFT_THIGH: return HITBOX_LEFT_THIGH;
		case HITBOX_ZOMBIE128_LEFT_CALF: return HITBOX_LEFT_CALF;
		case HITBOX_ZOMBIE128_LEFT_FOOT: return HITBOX_LEFT_FOOT;
		case HITBOX_ZOMBIE128_RIGHT_THIGH: return HITBOX_RIGHT_THIGH;
		case HITBOX_ZOMBIE128_RIGHT_CALF: return HITBOX_RIGHT_CALF;
		case HITBOX_ZOMBIE128_RIGHT_FOOT: return HITBOX_RIGHT_FOOT;
		}
		break;
	case FNV1A::Hash32Const("models/player/pyro_infected.mdl"):
		switch (nHitbox)
		{
		case HITBOX_ZOMBIE3_HEAD: return HITBOX_HEAD;
		case HITBOX_ZOMBIE3_SPINE0: return HITBOX_SPINE0;
		case HITBOX_ZOMBIE3_SPINE1: return HITBOX_SPINE1;
		case HITBOX_ZOMBIE3_SPINE2: return HITBOX_SPINE2;
		case HITBOX_ZOMBIE3_SPINE3: return HITBOX_SPINE3;
		case HITBOX_ZOMBIE3_NECK:
		case HITBOX_ZOMBIE3_PELVIS: return HITBOX_PELVIS;
		case HITBOX_ZOMBIE3_LEFT_COLLAR:
		case HITBOX_ZOMBIE3_LEFT_UPPERARM: return HITBOX_LEFT_UPPERARM;
		case HITBOX_ZOMBIE3_LEFT_FOREARM: return HITBOX_LEFT_FOREARM;
		case HITBOX_ZOMBIE3_LEFT_HAND: return HITBOX_LEFT_HAND;
		case HITBOX_ZOMBIE3_RIGHT_COLLAR:
		case HITBOX_ZOMBIE3_RIGHT_UPPERARM: return HITBOX_RIGHT_UPPERARM;
		case HITBOX_ZOMBIE3_RIGHT_FOREARM: return HITBOX_RIGHT_FOREARM;
		case HITBOX_ZOMBIE3_RIGHT_HAND: return HITBOX_RIGHT_HAND;
		case HITBOX_ZOMBIE3_LEFT_THIGH: return HITBOX_LEFT_THIGH;
		case HITBOX_ZOMBIE3_LEFT_CALF: return HITBOX_LEFT_CALF;
		case HITBOX_ZOMBIE3_LEFT_FOOT: return HITBOX_LEFT_FOOT;
		case HITBOX_ZOMBIE3_RIGHT_THIGH: return HITBOX_RIGHT_THIGH;
		case HITBOX_ZOMBIE3_RIGHT_CALF: return HITBOX_RIGHT_CALF;
		case HITBOX_ZOMBIE3_RIGHT_FOOT: return HITBOX_RIGHT_FOOT;
		}
		break;
	case FNV1A::Hash32Const("models/player/demo_infected.mdl"):
		switch (nHitbox)
		{
		case HITBOX_ZOMBIE4_HEAD: return HITBOX_HEAD;
		case HITBOX_ZOMBIE4_SPINE0: return HITBOX_SPINE0;
		case HITBOX_ZOMBIE4_SPINE1: return HITBOX_SPINE1;
		case HITBOX_ZOMBIE4_SPINE2: return HITBOX_SPINE2;
		case HITBOX_ZOMBIE4_SPINE3: return HITBOX_SPINE3;
		case HITBOX_ZOMBIE4_NECK:
		case HITBOX_ZOMBIE4_PELVIS: return HITBOX_PELVIS;
		case HITBOX_ZOMBIE4_LEFT_COLLAR:
		case HITBOX_ZOMBIE4_LEFT_UPPERARM: return HITBOX_LEFT_UPPERARM;
		case HITBOX_ZOMBIE4_LEFT_FOREARM: return HITBOX_LEFT_FOREARM;
		case HITBOX_ZOMBIE4_LEFT_HAND: return HITBOX_LEFT_HAND;
		case HITBOX_ZOMBIE4_RIGHT_COLLAR:
		case HITBOX_ZOMBIE4_RIGHT_UPPERARM: return HITBOX_RIGHT_UPPERARM;
		case HITBOX_ZOMBIE4_RIGHT_FOREARM: return HITBOX_RIGHT_FOREARM;
		case HITBOX_ZOMBIE4_RIGHT_HAND: return HITBOX_RIGHT_HAND;
		case HITBOX_ZOMBIE4_LEFT_THIGH: return HITBOX_LEFT_THIGH;
		case HITBOX_ZOMBIE4_LEFT_CALF: return HITBOX_LEFT_CALF;
		case HITBOX_ZOMBIE4_LEFT_FOOT: return HITBOX_LEFT_FOOT;
		case HITBOX_ZOMBIE4_RIGHT_THIGH: return HITBOX_RIGHT_THIGH;
		case HITBOX_ZOMBIE4_RIGHT_CALF: return HITBOX_RIGHT_CALF;
		case HITBOX_ZOMBIE4_RIGHT_FOOT: return HITBOX_RIGHT_FOOT;
		}
		break;
	case FNV1A::Hash32Const("models/player/heavy_infected.mdl"):
		switch (nHitbox)
		{
		case HITBOX_ZOMBIE5_HEAD: return HITBOX_HEAD;
		case HITBOX_ZOMBIE5_SPINE0: return HITBOX_SPINE0;
		case HITBOX_ZOMBIE5_SPINE1: return HITBOX_SPINE1;
		case HITBOX_ZOMBIE5_SPINE2: return HITBOX_SPINE2;
		case HITBOX_ZOMBIE5_SPINE3: return HITBOX_SPINE3;
		case HITBOX_ZOMBIE5_NECK:
		case HITBOX_ZOMBIE5_PELVIS: return HITBOX_PELVIS;
		case HITBOX_ZOMBIE5_LEFT_COLLAR:
		case HITBOX_ZOMBIE5_LEFT_UPPERARM: return HITBOX_LEFT_UPPERARM;
		case HITBOX_ZOMBIE5_LEFT_FOREARM: return HITBOX_LEFT_FOREARM;
		case HITBOX_ZOMBIE5_LEFT_HAND: return HITBOX_LEFT_HAND;
		case HITBOX_ZOMBIE5_RIGHT_COLLAR:
		case HITBOX_ZOMBIE5_RIGHT_UPPERARM: return HITBOX_RIGHT_UPPERARM;
		case HITBOX_ZOMBIE5_RIGHT_FOREARM: return HITBOX_RIGHT_FOREARM;
		case HITBOX_ZOMBIE5_RIGHT_HAND: return HITBOX_RIGHT_HAND;
		case HITBOX_ZOMBIE5_LEFT_THIGH: return HITBOX_LEFT_THIGH;
		case HITBOX_ZOMBIE5_LEFT_CALF: return HITBOX_LEFT_CALF;
		case HITBOX_ZOMBIE5_LEFT_FOOT: return HITBOX_LEFT_FOOT;
		case HITBOX_ZOMBIE5_RIGHT_THIGH: return HITBOX_RIGHT_THIGH;
		case HITBOX_ZOMBIE5_RIGHT_CALF: return HITBOX_RIGHT_CALF;
		case HITBOX_ZOMBIE5_RIGHT_FOOT: return HITBOX_RIGHT_FOOT;
		}
		break;
	case FNV1A::Hash32Const("models/player/engineer_infected.mdl"):
		switch (nHitbox)
		{
		case HITBOX_ZOMBIE6_HEAD: return HITBOX_HEAD;
		case HITBOX_ZOMBIE6_SPINE0: return HITBOX_SPINE0;
		case HITBOX_ZOMBIE6_SPINE1: return HITBOX_SPINE1;
		case HITBOX_ZOMBIE6_SPINE2: return HITBOX_SPINE2;
		case HITBOX_ZOMBIE6_SPINE3: return HITBOX_SPINE3;
		case HITBOX_ZOMBIE6_NECK:
		case HITBOX_ZOMBIE6_PELVIS: return HITBOX_PELVIS;
		case HITBOX_ZOMBIE6_LEFT_COLLAR:
		case HITBOX_ZOMBIE6_LEFT_UPPERARM: return HITBOX_LEFT_UPPERARM;
		case HITBOX_ZOMBIE6_LEFT_FOREARM: return HITBOX_LEFT_FOREARM;
		case HITBOX_ZOMBIE6_LEFT_HAND: return HITBOX_LEFT_HAND;
		case HITBOX_ZOMBIE6_RIGHT_COLLAR:
		case HITBOX_ZOMBIE6_RIGHT_UPPERARM: return HITBOX_RIGHT_UPPERARM;
		case HITBOX_ZOMBIE6_RIGHT_FOREARM: return HITBOX_RIGHT_FOREARM;
		case HITBOX_ZOMBIE6_RIGHT_HAND: return HITBOX_RIGHT_HAND;
		case HITBOX_ZOMBIE6_LEFT_THIGH: return HITBOX_LEFT_THIGH;
		case HITBOX_ZOMBIE6_LEFT_CALF: return HITBOX_LEFT_CALF;
		case HITBOX_ZOMBIE6_LEFT_FOOT: return HITBOX_LEFT_FOOT;
		case HITBOX_ZOMBIE6_RIGHT_THIGH: return HITBOX_RIGHT_THIGH;
		case HITBOX_ZOMBIE6_RIGHT_CALF: return HITBOX_RIGHT_CALF;
		case HITBOX_ZOMBIE6_RIGHT_FOOT: return HITBOX_RIGHT_FOOT;
		}
		break;
	case FNV1A::Hash32Const("models/player/medic_infected.mdl"):
		switch (nHitbox)
		{
		case HITBOX_ZOMBIE7_HEAD: return HITBOX_HEAD;
		case HITBOX_ZOMBIE7_SPINE0: return HITBOX_SPINE0;
		case HITBOX_ZOMBIE7_SPINE1: return HITBOX_SPINE1;
		case HITBOX_ZOMBIE7_SPINE2: return HITBOX_SPINE2;
		case HITBOX_ZOMBIE7_SPINE3: return HITBOX_SPINE3;
		case HITBOX_ZOMBIE7_NECK:
		case HITBOX_ZOMBIE7_PELVIS: return HITBOX_PELVIS;
		case HITBOX_ZOMBIE7_LEFT_COLLAR:
		case HITBOX_ZOMBIE7_LEFT_UPPERARM: return HITBOX_LEFT_UPPERARM;
		case HITBOX_ZOMBIE7_LEFT_FOREARM: return HITBOX_LEFT_FOREARM;
		case HITBOX_ZOMBIE7_LEFT_HAND: return HITBOX_LEFT_HAND;
		case HITBOX_ZOMBIE7_RIGHT_COLLAR:
		case HITBOX_ZOMBIE7_RIGHT_UPPERARM: return HITBOX_RIGHT_UPPERARM;
		case HITBOX_ZOMBIE7_RIGHT_FOREARM: return HITBOX_RIGHT_FOREARM;
		case HITBOX_ZOMBIE7_RIGHT_HAND: return HITBOX_RIGHT_HAND;
		case HITBOX_ZOMBIE7_LEFT_THIGH: return HITBOX_LEFT_THIGH;
		case HITBOX_ZOMBIE7_LEFT_CALF: return HITBOX_LEFT_CALF;
		case HITBOX_ZOMBIE7_LEFT_FOOT: return HITBOX_LEFT_FOOT;
		case HITBOX_ZOMBIE7_RIGHT_THIGH: return HITBOX_RIGHT_THIGH;
		case HITBOX_ZOMBIE7_RIGHT_CALF: return HITBOX_RIGHT_CALF;
		case HITBOX_ZOMBIE7_RIGHT_FOOT: return HITBOX_RIGHT_FOOT;
		}
		break;
	case FNV1A::Hash32Const("models/player/spy_infected.mdl"):
		switch (nHitbox)
		{
		case HITBOX_ZOMBIE9_HEAD: return HITBOX_HEAD;
		case HITBOX_ZOMBIE9_SPINE0: return HITBOX_SPINE0;
		case HITBOX_ZOMBIE9_SPINE1: return HITBOX_SPINE1;
		case HITBOX_ZOMBIE9_SPINE2: return HITBOX_SPINE2;
		case HITBOX_ZOMBIE9_SPINE3: return HITBOX_SPINE3;
		case HITBOX_ZOMBIE9_NECK:
		case HITBOX_ZOMBIE9_PELVIS: return HITBOX_PELVIS;
		case HITBOX_ZOMBIE9_LEFT_COLLAR:
		case HITBOX_ZOMBIE9_LEFT_UPPERARM: return HITBOX_LEFT_UPPERARM;
		case HITBOX_ZOMBIE9_LEFT_FOREARM: return HITBOX_LEFT_FOREARM;
		case HITBOX_ZOMBIE9_LEFT_HAND: return HITBOX_LEFT_HAND;
		case HITBOX_ZOMBIE9_RIGHT_COLLAR:
		case HITBOX_ZOMBIE9_RIGHT_UPPERARM: return HITBOX_RIGHT_UPPERARM;
		case HITBOX_ZOMBIE9_RIGHT_FOREARM: return HITBOX_RIGHT_FOREARM;
		case HITBOX_ZOMBIE9_RIGHT_HAND: return HITBOX_RIGHT_HAND;
		case HITBOX_ZOMBIE9_LEFT_THIGH: return HITBOX_LEFT_THIGH;
		case HITBOX_ZOMBIE9_LEFT_CALF: return HITBOX_LEFT_CALF;
		case HITBOX_ZOMBIE9_LEFT_FOOT: return HITBOX_LEFT_FOOT;
		case HITBOX_ZOMBIE9_RIGHT_THIGH: return HITBOX_RIGHT_THIGH;
		case HITBOX_ZOMBIE9_RIGHT_CALF: return HITBOX_RIGHT_CALF;
		case HITBOX_ZOMBIE9_RIGHT_FOOT: return HITBOX_RIGHT_FOOT;
		}
		break;
	}
	return nHitbox;
}

int CBaseEntity::GetBaseToHitbox(int nHitbox)
{
	switch (H::Entities.GetModel(entindex()))
	{
	case FNV1A::Hash32Const("models/vsh/player/saxton_hale.mdl"):
	case FNV1A::Hash32Const("models/vsh/player/hell_hale.mdl"):
	case FNV1A::Hash32Const("models/vsh/player/santa_hale.mdl"):
		switch (nHitbox)
		{
		case HITBOX_HEAD: return HITBOX_SAXTON_HEAD;
		case HITBOX_SPINE0: return HITBOX_SAXTON_SPINE0;
		case HITBOX_SPINE1: return HITBOX_SAXTON_SPINE1;
		case HITBOX_SPINE2: return HITBOX_SAXTON_SPINE2;
		case HITBOX_SPINE3: return HITBOX_SAXTON_SPINE3;
		case HITBOX_PELVIS: return HITBOX_SAXTON_PELVIS;
		case HITBOX_LEFT_UPPERARM: return HITBOX_SAXTON_LEFT_UPPERARM;
		case HITBOX_LEFT_FOREARM: return HITBOX_SAXTON_LEFT_FOREARM;
		case HITBOX_LEFT_HAND: return HITBOX_SAXTON_LEFT_HAND;
		case HITBOX_RIGHT_UPPERARM: return HITBOX_SAXTON_RIGHT_UPPERARM;
		case HITBOX_RIGHT_FOREARM: return HITBOX_SAXTON_RIGHT_FOREARM;
		case HITBOX_RIGHT_HAND: return HITBOX_SAXTON_RIGHT_HAND;
		case HITBOX_LEFT_THIGH: return HITBOX_SAXTON_LEFT_THIGH;
		case HITBOX_LEFT_CALF: return HITBOX_SAXTON_LEFT_CALF;
		case HITBOX_LEFT_FOOT: return HITBOX_SAXTON_LEFT_FOOT;
		case HITBOX_RIGHT_THIGH: return HITBOX_SAXTON_RIGHT_THIGH;
		case HITBOX_RIGHT_CALF: return HITBOX_SAXTON_RIGHT_CALF;
		case HITBOX_RIGHT_FOOT: return HITBOX_SAXTON_RIGHT_FOOT;
		}
		break;
	case FNV1A::Hash32Const("models/player/scout_infected.mdl"):
	case FNV1A::Hash32Const("models/player/soldier_infected.mdl"):
	case FNV1A::Hash32Const("models/player/sniper_infected.mdl"):
		switch (nHitbox)
		{
		case HITBOX_HEAD: return HITBOX_ZOMBIE128_HEAD;
		case HITBOX_SPINE0: return HITBOX_ZOMBIE128_SPINE0;
		case HITBOX_SPINE1: return HITBOX_ZOMBIE128_SPINE1;
		case HITBOX_SPINE2: return HITBOX_ZOMBIE128_SPINE2;
		case HITBOX_SPINE3: return HITBOX_ZOMBIE128_SPINE3;
		case HITBOX_PELVIS: return HITBOX_ZOMBIE128_PELVIS;
		case HITBOX_LEFT_UPPERARM: return HITBOX_ZOMBIE128_LEFT_UPPERARM;
		case HITBOX_LEFT_FOREARM: return HITBOX_ZOMBIE128_LEFT_FOREARM;
		case HITBOX_LEFT_HAND: return HITBOX_ZOMBIE128_LEFT_HAND;
		case HITBOX_RIGHT_UPPERARM: return HITBOX_ZOMBIE128_RIGHT_UPPERARM;
		case HITBOX_RIGHT_FOREARM: return HITBOX_ZOMBIE128_RIGHT_FOREARM;
		case HITBOX_RIGHT_HAND: return HITBOX_ZOMBIE128_RIGHT_HAND;
		case HITBOX_LEFT_THIGH: return HITBOX_ZOMBIE128_LEFT_THIGH;
		case HITBOX_LEFT_CALF: return HITBOX_ZOMBIE128_LEFT_CALF;
		case HITBOX_LEFT_FOOT: return HITBOX_ZOMBIE128_LEFT_FOOT;
		case HITBOX_RIGHT_THIGH: return HITBOX_ZOMBIE128_RIGHT_THIGH;
		case HITBOX_RIGHT_CALF: return HITBOX_ZOMBIE128_RIGHT_CALF;
		case HITBOX_RIGHT_FOOT: return HITBOX_ZOMBIE128_RIGHT_FOOT;
		}
		break;
	case FNV1A::Hash32Const("models/player/pyro_infected.mdl"):
		switch (nHitbox)
		{
		case HITBOX_HEAD: return HITBOX_ZOMBIE3_HEAD;
		case HITBOX_SPINE0: return HITBOX_ZOMBIE3_SPINE0;
		case HITBOX_SPINE1: return HITBOX_ZOMBIE3_SPINE1;
		case HITBOX_SPINE2: return HITBOX_ZOMBIE3_SPINE2;
		case HITBOX_SPINE3: return HITBOX_ZOMBIE3_SPINE3;
		case HITBOX_PELVIS: return HITBOX_ZOMBIE3_PELVIS;
		case HITBOX_LEFT_UPPERARM: return HITBOX_ZOMBIE3_LEFT_UPPERARM;
		case HITBOX_LEFT_FOREARM: return HITBOX_ZOMBIE3_LEFT_FOREARM;
		case HITBOX_LEFT_HAND: return HITBOX_ZOMBIE3_LEFT_HAND;
		case HITBOX_RIGHT_UPPERARM: return HITBOX_ZOMBIE3_RIGHT_UPPERARM;
		case HITBOX_RIGHT_FOREARM: return HITBOX_ZOMBIE3_RIGHT_FOREARM;
		case HITBOX_RIGHT_HAND: return HITBOX_ZOMBIE3_RIGHT_HAND;
		case HITBOX_LEFT_THIGH: return HITBOX_ZOMBIE3_LEFT_THIGH;
		case HITBOX_LEFT_CALF: return HITBOX_ZOMBIE3_LEFT_CALF;
		case HITBOX_LEFT_FOOT: return HITBOX_ZOMBIE3_LEFT_FOOT;
		case HITBOX_RIGHT_THIGH: return HITBOX_ZOMBIE3_RIGHT_THIGH;
		case HITBOX_RIGHT_CALF: return HITBOX_ZOMBIE3_RIGHT_CALF;
		case HITBOX_RIGHT_FOOT: return HITBOX_ZOMBIE3_RIGHT_FOOT;
		}
		break;
	case FNV1A::Hash32Const("models/player/demo_infected.mdl"):
		switch (nHitbox)
		{
		case HITBOX_HEAD: return HITBOX_ZOMBIE4_HEAD;
		case HITBOX_SPINE0: return HITBOX_ZOMBIE4_SPINE0;
		case HITBOX_SPINE1: return HITBOX_ZOMBIE4_SPINE1;
		case HITBOX_SPINE2: return HITBOX_ZOMBIE4_SPINE2;
		case HITBOX_SPINE3: return HITBOX_ZOMBIE4_SPINE3;
		case HITBOX_PELVIS: return HITBOX_ZOMBIE4_PELVIS;
		case HITBOX_LEFT_UPPERARM: return HITBOX_ZOMBIE4_LEFT_UPPERARM;
		case HITBOX_LEFT_FOREARM: return HITBOX_ZOMBIE4_LEFT_FOREARM;
		case HITBOX_LEFT_HAND: return HITBOX_ZOMBIE4_LEFT_HAND;
		case HITBOX_RIGHT_UPPERARM: return HITBOX_ZOMBIE4_RIGHT_UPPERARM;
		case HITBOX_RIGHT_FOREARM: return HITBOX_ZOMBIE4_RIGHT_FOREARM;
		case HITBOX_RIGHT_HAND: return HITBOX_ZOMBIE4_RIGHT_HAND;
		case HITBOX_LEFT_THIGH: return HITBOX_ZOMBIE4_LEFT_THIGH;
		case HITBOX_LEFT_CALF: return HITBOX_ZOMBIE4_LEFT_CALF;
		case HITBOX_LEFT_FOOT: return HITBOX_ZOMBIE4_LEFT_FOOT;
		case HITBOX_RIGHT_THIGH: return HITBOX_ZOMBIE4_RIGHT_THIGH;
		case HITBOX_RIGHT_CALF: return HITBOX_ZOMBIE4_RIGHT_CALF;
		case HITBOX_RIGHT_FOOT: return HITBOX_ZOMBIE4_RIGHT_FOOT;
		}
		break;
	case FNV1A::Hash32Const("models/player/heavy_infected.mdl"):
		switch (nHitbox)
		{
		case HITBOX_HEAD: return HITBOX_ZOMBIE5_HEAD;
		case HITBOX_SPINE0: return HITBOX_ZOMBIE5_SPINE0;
		case HITBOX_SPINE1: return HITBOX_ZOMBIE5_SPINE1;
		case HITBOX_SPINE2: return HITBOX_ZOMBIE5_SPINE2;
		case HITBOX_SPINE3: return HITBOX_ZOMBIE5_SPINE3;
		case HITBOX_PELVIS: return HITBOX_ZOMBIE5_PELVIS;
		case HITBOX_LEFT_UPPERARM: return HITBOX_ZOMBIE5_LEFT_UPPERARM;
		case HITBOX_LEFT_FOREARM: return HITBOX_ZOMBIE5_LEFT_FOREARM;
		case HITBOX_LEFT_HAND: return HITBOX_ZOMBIE5_LEFT_HAND;
		case HITBOX_RIGHT_UPPERARM: return HITBOX_ZOMBIE5_RIGHT_UPPERARM;
		case HITBOX_RIGHT_FOREARM: return HITBOX_ZOMBIE5_RIGHT_FOREARM;
		case HITBOX_RIGHT_HAND: return HITBOX_ZOMBIE5_RIGHT_HAND;
		case HITBOX_LEFT_THIGH: return HITBOX_ZOMBIE5_LEFT_THIGH;
		case HITBOX_LEFT_CALF: return HITBOX_ZOMBIE5_LEFT_CALF;
		case HITBOX_LEFT_FOOT: return HITBOX_ZOMBIE5_LEFT_FOOT;
		case HITBOX_RIGHT_THIGH: return HITBOX_ZOMBIE5_RIGHT_THIGH;
		case HITBOX_RIGHT_CALF: return HITBOX_ZOMBIE5_RIGHT_CALF;
		case HITBOX_RIGHT_FOOT: return HITBOX_ZOMBIE5_RIGHT_FOOT;
		}
		break;
	case FNV1A::Hash32Const("models/player/engineer_infected.mdl"):
		switch (nHitbox)
		{
		case HITBOX_HEAD: return HITBOX_ZOMBIE6_HEAD;
		case HITBOX_SPINE0: return HITBOX_ZOMBIE6_SPINE0;
		case HITBOX_SPINE1: return HITBOX_ZOMBIE6_SPINE1;
		case HITBOX_SPINE2: return HITBOX_ZOMBIE6_SPINE2;
		case HITBOX_SPINE3: return HITBOX_ZOMBIE6_SPINE3;
		case HITBOX_PELVIS: return HITBOX_ZOMBIE6_PELVIS;
		case HITBOX_LEFT_UPPERARM: return HITBOX_ZOMBIE6_LEFT_UPPERARM;
		case HITBOX_LEFT_FOREARM: return HITBOX_ZOMBIE6_LEFT_FOREARM;
		case HITBOX_LEFT_HAND: return HITBOX_ZOMBIE6_LEFT_HAND;
		case HITBOX_RIGHT_UPPERARM: return HITBOX_ZOMBIE6_RIGHT_UPPERARM;
		case HITBOX_RIGHT_FOREARM: return HITBOX_ZOMBIE6_RIGHT_FOREARM;
		case HITBOX_RIGHT_HAND: return HITBOX_ZOMBIE6_RIGHT_HAND;
		case HITBOX_LEFT_THIGH: return HITBOX_ZOMBIE6_LEFT_THIGH;
		case HITBOX_LEFT_CALF: return HITBOX_ZOMBIE6_LEFT_CALF;
		case HITBOX_LEFT_FOOT: return HITBOX_ZOMBIE6_LEFT_FOOT;
		case HITBOX_RIGHT_THIGH: return HITBOX_ZOMBIE6_RIGHT_THIGH;
		case HITBOX_RIGHT_CALF: return HITBOX_ZOMBIE6_RIGHT_CALF;
		case HITBOX_RIGHT_FOOT: return HITBOX_ZOMBIE6_RIGHT_FOOT;
		}
		break;
	case FNV1A::Hash32Const("models/player/medic_infected.mdl"):
		switch (nHitbox)
		{
		case HITBOX_HEAD: return HITBOX_ZOMBIE7_HEAD;
		case HITBOX_SPINE0: return HITBOX_ZOMBIE7_SPINE0;
		case HITBOX_SPINE1: return HITBOX_ZOMBIE7_SPINE1;
		case HITBOX_SPINE2: return HITBOX_ZOMBIE7_SPINE2;
		case HITBOX_SPINE3: return HITBOX_ZOMBIE7_SPINE3;
		case HITBOX_PELVIS: return HITBOX_ZOMBIE7_PELVIS;
		case HITBOX_LEFT_UPPERARM: return HITBOX_ZOMBIE7_LEFT_UPPERARM;
		case HITBOX_LEFT_FOREARM: return HITBOX_ZOMBIE7_LEFT_FOREARM;
		case HITBOX_LEFT_HAND: return HITBOX_ZOMBIE7_LEFT_HAND;
		case HITBOX_RIGHT_UPPERARM: return HITBOX_ZOMBIE7_RIGHT_UPPERARM;
		case HITBOX_RIGHT_FOREARM: return HITBOX_ZOMBIE7_RIGHT_FOREARM;
		case HITBOX_RIGHT_HAND: return HITBOX_ZOMBIE7_RIGHT_HAND;
		case HITBOX_LEFT_THIGH: return HITBOX_ZOMBIE7_LEFT_THIGH;
		case HITBOX_LEFT_CALF: return HITBOX_ZOMBIE7_LEFT_CALF;
		case HITBOX_LEFT_FOOT: return HITBOX_ZOMBIE7_LEFT_FOOT;
		case HITBOX_RIGHT_THIGH: return HITBOX_ZOMBIE7_RIGHT_THIGH;
		case HITBOX_RIGHT_CALF: return HITBOX_ZOMBIE7_RIGHT_CALF;
		case HITBOX_RIGHT_FOOT: return HITBOX_ZOMBIE7_RIGHT_FOOT;
		}
		break;
	case FNV1A::Hash32Const("models/player/spy_infected.mdl"):
		switch (nHitbox)
		{
		case HITBOX_HEAD: return HITBOX_ZOMBIE9_HEAD;
		case HITBOX_SPINE0: return HITBOX_ZOMBIE9_SPINE0;
		case HITBOX_SPINE1: return HITBOX_ZOMBIE9_SPINE1;
		case HITBOX_SPINE2: return HITBOX_ZOMBIE9_SPINE2;
		case HITBOX_SPINE3: return HITBOX_ZOMBIE9_SPINE3;
		case HITBOX_PELVIS: return HITBOX_ZOMBIE9_PELVIS;
		case HITBOX_LEFT_UPPERARM: return HITBOX_ZOMBIE9_LEFT_UPPERARM;
		case HITBOX_LEFT_FOREARM: return HITBOX_ZOMBIE9_LEFT_FOREARM;
		case HITBOX_LEFT_HAND: return HITBOX_ZOMBIE9_LEFT_HAND;
		case HITBOX_RIGHT_UPPERARM: return HITBOX_ZOMBIE9_RIGHT_UPPERARM;
		case HITBOX_RIGHT_FOREARM: return HITBOX_ZOMBIE9_RIGHT_FOREARM;
		case HITBOX_RIGHT_HAND: return HITBOX_ZOMBIE9_RIGHT_HAND;
		case HITBOX_LEFT_THIGH: return HITBOX_ZOMBIE9_LEFT_THIGH;
		case HITBOX_LEFT_CALF: return HITBOX_ZOMBIE9_LEFT_CALF;
		case HITBOX_LEFT_FOOT: return HITBOX_ZOMBIE9_LEFT_FOOT;
		case HITBOX_RIGHT_THIGH: return HITBOX_ZOMBIE9_RIGHT_THIGH;
		case HITBOX_RIGHT_CALF: return HITBOX_ZOMBIE9_RIGHT_CALF;
		case HITBOX_RIGHT_FOOT: return HITBOX_ZOMBIE9_RIGHT_FOOT;
		}
		break;
	}
	return nHitbox;
}
#pragma endregion